#include<Wire.h>
#include<SPI.h>
#include<Adafruit_GFX.h>
#include<Adafruit_SSD1306.h>

#define OLED_MOSI 11
#define OLED_CLK 12
#define OLED_DC 9
#define OLED_CS 8
#define OLED_RESET 10
#define Light_PIN A0
Adafruit_SSD1306 display(OLED_MOSI,OLED_CLK,OLED_DC,OLED_RESET,OLED_CS);

static const unsigned char PROGMEM Char[] = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0xff,0xfc,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x27,0xf8,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x3e,0x18,0x00,0x80,0x00,0x01,0x80,0x00,
  0x00,0x00,0x00,0x10,0x3c,0x01,0xc4,0x00,0x81,0xc0,0x00,
  0x00,0x00,0x00,0x00,0x78,0x01,0xff,0x00,0xc0,0xe0,0x00,
  0x00,0x00,0x00,0x00,0x78,0x03,0xf8,0x00,0x60,0x70,0x00,
  0x00,0x00,0x7f,0xc0,0x78,0x00,0x00,0x00,0x60,0x38,0x00,
  0x01,0x87,0xff,0xc0,0x3f,0x80,0x96,0xc0,0x3f,0x98,0x00,
  0x03,0xbf,0x80,0x80,0xf0,0x83,0xff,0x80,0x7f,0xc8,0x00,
  0x07,0xf8,0x00,0x00,0x7f,0xdf,0xfc,0x01,0xff,0x80,0x00,
  0x07,0xc0,0x00,0x01,0xff,0x9b,0xb1,0x87,0x8c,0x00,0x00,
  0x02,0x00,0x00,0x07,0xff,0x01,0xff,0xce,0x06,0x00,0x00,
  0x00,0x00,0x00,0x03,0xe4,0x01,0xf0,0x00,0x86,0x00,0x00,
  0x00,0x00,0x00,0x0e,0x60,0x03,0x80,0x01,0x03,0x0c,0x00,
  0x00,0x00,0x00,0x00,0xe0,0x00,0x00,0x01,0x73,0x9c,0x00,
  0x00,0x00,0x00,0x00,0xe0,0x08,0x3f,0xe3,0x91,0xf8,0x00,
  0x00,0x00,0x1e,0x00,0xe0,0x1d,0xf0,0x33,0x30,0xf0,0x80,
  0x00,0x00,0x07,0xf0,0xe0,0x3f,0x00,0x76,0x61,0xe0,0x00,
  0x00,0x00,0x01,0xfe,0xe0,0x78,0x00,0xc4,0x83,0xe0,0x00,
  0x00,0x00,0x00,0x0f,0xe0,0x70,0x03,0x80,0x0f,0x70,0x00,
  0x00,0x00,0x00,0x01,0xc0,0x00,0x06,0x00,0x1e,0x3a,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x1e,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x0e,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf0,0x0e,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x07,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};

static const unsigned char PROGMEM Logo[] = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xff,0x80,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf8,0x00,0x7e,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xc0,0x00,0x03,0xc0,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x0e,0x00,0x1f,0xc0,0x00,0x00,0x30,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0xff,0xc0,0x00,0x00,0x0c,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x0f,0x01,0xff,0xc0,0x00,0x00,0x06,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x5f,0x87,0xff,0xc0,0x00,0x00,0x03,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x0f,0xff,0xff,0xff,0x80,0x00,0x00,0x01,0x80,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x80,0x00,0x00,0x01,0x80,0x00,0x00,0x00,
  0x00,0x00,0x00,0x07,0xff,0xff,0xff,0xff,0x80,0x00,0x00,0x03,0xc0,0x00,0x00,0x00,
  0x00,0x00,0x00,0x7f,0xfb,0x9f,0xff,0xff,0x80,0x00,0x00,0x03,0xf0,0x00,0x00,0x00,
  0x00,0x00,0x07,0xff,0xf3,0x8f,0xff,0xff,0x80,0x00,0x00,0x07,0xfc,0x00,0x00,0x00,
  0x00,0x00,0x3f,0xff,0xf3,0x8f,0xff,0xff,0x80,0x00,0x00,0x07,0xff,0x80,0x00,0x00,
  0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x80,0x00,0x40,0x0f,0xff,0xff,0xff,0xc0,
  0x00,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xc0,0x01,0xe0,0x0f,0xff,0xff,0xff,0xf8,
  0x01,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0x1f,0xff,0xff,0xff,0xfe,
  0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0x1f,0xff,0xff,0xf1,0x80,
  0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,
  0x1f,0xfe,0x0e,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,
};
void splash(){
  int light = analogRead(Light_PIN);
  Serial.println(light);
  display.clearDisplay();
  display.setTextColor(WHITE);
  display.setTextSize(2);
  display.setCursor(0,10);
  display.print("Light:");
  display.setTextSize(2);
  display.setCursor(70,10);
  display.print(light);
  display.display();
}

void textpic(){
  int light = analogRead(Light_PIN);
  Serial.println(light);
  display.clearDisplay();
  display.drawBitmap(50,12,Logo,128,19,WHITE);
  display.setTextColor(WHITE);
  display.setTextSize(1);
  display.setCursor(0,6);
  display.print("\n");
  display.print(" \n");
  display.print("  Z...\n"); 
  display.display();
}
void textpic1(){
  int light = analogRead(Light_PIN);
  Serial.println(light);
  display.clearDisplay();
  display.drawBitmap(50,12,Logo,128,19,WHITE);
  display.setTextColor(WHITE);
  display.setTextSize(1);
  display.setCursor(0,6);
  display.print("\n");
  display.print(" Z\n");
  display.print("  Z...\n"); 
  display.display();
}
void textpic2(){
  int light = analogRead(Light_PIN);
  Serial.println(light);
  display.clearDisplay();
  display.drawBitmap(50,12,Logo,128,19,WHITE);
  display.setTextColor(WHITE);
  display.setTextSize(1);
  display.setCursor(0,6);
  display.print("Z\n");
  display.print(" Z\n");
  display.print("  Z...\n"); 
  display.display();
}

 void showpic(){
    display.drawBitmap(0,12,Logo,128,19,WHITE);
    display.display();
}

void showchar(){
    display.clearDisplay();
    display.drawBitmap(20,0,Char,88,32,WHITE);
    display.display();
}

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  pinMode(Light_PIN,INPUT);
  display.begin(SSD1306_SWITCHCAPVCC, 0x3D);
  display.clearDisplay();
  display.setTextWrap(false);
 
  
}

void loop() {
  // put your main code here, to run repeatedly:
  textpic();
  delay(500);
  textpic1();
  delay(500);
  textpic2();
  delay(800);
  showchar();
  delay(1500);
}
